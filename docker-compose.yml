version: "3.2"

#Docker Networks
networks:
  phoenix_laravel:
    driver: bridge
#Volumes
volumes:
  laravel_dbdata:
    driver: local
services:
  #NodeJS App
  app:
    build:
    args:
        user: hungthinh
        uid: 1000
      context: .
      dockerfile: Dockerfile
      #target: get from .dev.yml or .prod.yml
    image: ${COMPOSE_PROJECT_NAME}
    container_name: ${COMPOSE_PROJECT_NAME}_app
    hostname: ${COMPOSE_PROJECT_NAME}_app
    restart: unless-stopped
    tty: true
    working_dir: /var/www/html
    networks:
      - phoenix_laravel
  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: ${COMPOSE_PROJECT_NAME}_webserver
    hostname: ${COMPOSE_PROJECT_NAME}_webserver
    restart: unless-stopped
    tty: true
    ports:
      - "8889:80"
    volumes:
      - ./src:/var/www/html
      - ./etc/nginx/conf.d:/etc/nginx/conf.d
      # - ./etc/selfsignedssl:/etc/selfsignedssl
    networks:
      - phoenix_laravel

  #MySQL Service
  db:
    image: mysql:5.7.36
    container_name: ${COMPOSE_PROJECT_NAME}_db
    hostname: ${COMPOSE_PROJECT_NAME}_db
    restart: unless-stopped
    tty: true
    ports:
      - "127.0.0.1:${DB_PORT}:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - laravel_dbdata:/var/lib/mysql
      - ./etc/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - phoenix_laravel